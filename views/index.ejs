
<!DOCTYPE html>
<html ng-app='erpagWeather'>
	<head>
		<meta charset="utf-8">
		<title>Erpag Weather</title>
		<!-- Description, Keywords and Author -->
		<meta name="description" content="Your description">
		<meta name="keywords" content="Your,Keywords">
		<meta name="author" content="ResponsiveWebInc">
		<!-- Styles -->
        <!-- Font Awesome -->
        <link href="stylesheets/font-awesome.min.css" rel="stylesheet">
<!--        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css">-->
<!--        <link href='http://fonts.googleapis.com/css?family=Jaldi:700,400' rel='stylesheet' type='text/css'>-->
        <!-- Pixel Fabric clothes icons -->
<!--        <link rel="stylesheet" type="text/css" href="fonts/pixelfabric-clothes/style.css" />-->
         <!-- Flickity gallery styles -->
<!--        <link rel="stylesheet" type="text/css" href="stylesheets/flickity.css" />-->
        <!-- Component styles -->
<!--        <link rel="stylesheet" type="text/css" href="stylesheets/my_day.css" />-->
<!--        <link rel="stylesheet" type="text/css" href="stylesheets/timeline.css" />-->
<!--        <link rel="stylesheet" type="text/css" href="stylesheets/stylemenu.css" />-->
<!--        <link rel="stylesheet" type="text/css" href="stylesheets/flow.css" />-->
        <link rel="stylesheet" href="stylesheets/reset.css"> <!-- CSS reset -->
	    <link rel="stylesheet" href="stylesheets/style.css"> <!-- Resource style -->
<!--        <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/angular_material/0.11.2/angular-material.min.css">-->
		<!-- Bootstrap CSS -->
<!--		<link  type="text/css" href="stylesheets/bootstrap.min.css" rel="stylesheet">-->
<!--        <link  type="text/css" href="stylesheets/bootstrap-datetimepicker.min.css" rel="stylesheet">-->
        

		<!-- Font awesome CSS -->
		<!-- Main CSS -->
		<!-- Resourcesn -->
		<link rel="shortcut icon" href="#">
<!--	<script src="https://cdnjs.cloudflare.com/ajax/lib/jquery/3.0.0-alpha1/jquery.js"></script>-->
        <script src="js/jquery-2.1.4.min.js"></script>
<!--        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>-->
<!--        <script src="js/bootstrap-datetimepicker.min.js"></script>-->
    	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular.min.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular-route.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular-resource.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular-animate.js"></script>
        <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.4/angular-aria.js"></script>
        <script src="//code.angularjs.org/1.4.4/angular-cookies.min.js"></script>                                                                   
            <!-- Auth0 Lock script and AngularJS module -->
        <script src="//cdn.auth0.com/js/lock-7.9.min.js"></script>
            <!-- angular-jwt and angular-storage -->
        <script type="text/javascript" src="//cdn.rawgit.com/auth0/angular-storage/master/dist/angular-storage.js"></script>
        <script type="text/javascript" src="//cdn.rawgit.com/auth0/angular-jwt/master/dist/angular-jwt.js"></script>
        <script src="//cdn.auth0.com/w2/auth0-angular-4.js"> </script>
            <!-- Setting the right viewport -->
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />               
<!--    <script src="js/angular-css.min.js"></script>-->  
            <!-- Angular Material Javascript now available via Google CDN; version 0.11.2 used here -->
        <script src="https://ajax.googleapis.com/ajax/libs/angular_material/0.11.2/angular-material.min.js"></script>
                <script src="js/modernizr.js"></script>
	</head>
    <body>
<!--    <body class="cbp-spmenu-push" >-->
<!--
        <header>
             <button id="showLeftPush" > &#9776;</button>
             <ul class="primary-nav">
                <md-button type="submit" ng-controller="LoginCtrl" ng-click="login()" >LOG IN</md-button>
                <md-button type="submit" ng-controller="LoginCtrl" ng-click="logout()" value="Log out">LOG OUT</md-button>
               
                <md-datepicker ng-model="myDate" md-placeholder="MY day date" class=" col-md-12"></md-datepicker>
                <a href="#register">registrujete</a></h5>
            </ul>
            <nav class="cbp-spmenu cbp-spmenu-vertical cbp-spmenu-left" id="cbp-spmenu-s1">
                <md-button ng-href="#Home" >Home</md-button>
                <md-button ng-href="#list">List</md-button>
                <md-button ng-href="#comp">Firme</md-button>
                <md-button ng-href="#userInfo">UserInfo</md-button>
                <md-button ng-href="#timeline">Timeline</md-button>
            </nav> 
        </header>
-->
<!--CONTENT-->
<section  class="view">
    <div ng-view></div>    
</section>
<container>
  <!-- Bottom bar with filter and cart info -->
  <div class="bar">
      
      
      
        <!-- ovde ide filter ili footer -->
      
    </div>
 </container>        
      <!--JS LIBS-->

<!--ukolnjeno dok se ne zavrsi jednostavni prikaz elemnata
        <script src="js/isotope.pkgd.min.js"></script>
        <script src="js/flickity.pkgd.min.js"></script>
-->
     <!--App files-->
        <script src="js/app.js"></script>
        <script src="js/controllers.js"></script>
        <script src="js/directives.js"></script>
        <script src="js/services.js"></script>
        <script src="js/routes.js"></script>
    <!-- Classie - class helper functions by @desandro https://github.com/desandro/classie -->
<!--		<script src="js/classie.js"></script>-->
        <script src="js/jquery.mixitup.min.js"></script>
<!--        <script src="js/main.js"></script> -->
<!-- Resource jQuery -->
<!--
		<script>
//			var menuLeft = document.getElementById( 'cbp-spmenu-s1' ),
////				showLeft = document.getElementById( 'showLeft' ),
//				showLeftPush = document.getElementById( 'showLeftPush' ),
//				body = document.body;
//
//			showLeftPush.onclick = function() {
//				classie.toggle( this, 'active' );
//				classie.toggle( body, 'cbp-spmenu-push-toright' );
//				classie.toggle( menuLeft, 'cbp-spmenu-open' );
//			};

		</script>
-->
<script>
        jQuery(document).ready(function($){
	//open/close lateral filter
	$('.cd-filter-trigger').on('click', function(){
		triggerFilter(true);
	});
	$('.cd-filter .cd-close').on('click', function(){
		triggerFilter(false);
	});

	function triggerFilter($bool) {
		var elementsToTrigger = $([$('.cd-filter-trigger'), $('.cd-filter'), $('.cd-tab-filter'), $('.cd-gallery')]);
		elementsToTrigger.each(function(){
			$(this).toggleClass('filter-is-visible', $bool);
		});
	}

	//mobile version - detect click event on filters tab
	var filter_tab_placeholder = $('.cd-tab-filter .placeholder a'),
		filter_tab_placeholder_default_value = 'Select',
		filter_tab_placeholder_text = filter_tab_placeholder.text();
	
	$('.cd-tab-filter li').on('click', function(event){
		//detect which tab filter item was selected
		var selected_filter = $(event.target).data('type');
			
		//check if user has clicked the placeholder item
		if( $(event.target).is(filter_tab_placeholder) ) {
			(filter_tab_placeholder_default_value == filter_tab_placeholder.text()) ? filter_tab_placeholder.text(filter_tab_placeholder_text) : filter_tab_placeholder.text(filter_tab_placeholder_default_value) ;
			$('.cd-tab-filter').toggleClass('is-open');

		//check if user has clicked a filter already selected 
		} else if( filter_tab_placeholder.data('type') == selected_filter ) {
			filter_tab_placeholder.text($(event.target).text());
			$('.cd-tab-filter').removeClass('is-open');	

		} else {
			//close the dropdown and change placeholder text/data-type value
			$('.cd-tab-filter').removeClass('is-open');
			filter_tab_placeholder.text($(event.target).text()).data('type', selected_filter);
			filter_tab_placeholder_text = $(event.target).text();
			
			//add class selected to the selected filter item
			$('.cd-tab-filter .selected').removeClass('selected');
			$(event.target).addClass('selected');
		}
	});
	
	//close filter dropdown inside lateral .cd-filter 
	$('.cd-filter-block h4').on('click', function(){
		$(this).toggleClass('closed').siblings('.cd-filter-content').slideToggle(300);
	})

	//fix lateral filter and gallery on scrolling
	$(window).on('scroll', function(){
		(!window.requestAnimationFrame) ? fixGallery() : window.requestAnimationFrame(fixGallery);
	});

	function fixGallery() {
		var offsetTop = $('.cd-main-content').offset().top,
			scrollTop = $(window).scrollTop();
		( scrollTop >= offsetTop ) ? $('.cd-main-content').addClass('is-fixed') : $('.cd-main-content').removeClass('is-fixed');
	}

	/************************************
		MitItUp filter settings
		More details: 
		https://mixitup.kunkalabs.com/
		or:
		http://codepen.io/patrickkunka/
	*************************************/

	buttonFilter.init();
	$('.cd-gallery ul').mixItUp({
	    controls: {
	    	enable: false
	    },
	    callbacks: {
	    	onMixStart: function(){
	    		$('.cd-fail-message').fadeOut(200);
	    	},
	      	onMixFail: function(){
	      		$('.cd-fail-message').fadeIn(200);
	    	}
	    }
	});

	//search filtering
	//credits http://codepen.io/edprats/pen/pzAdg
	var inputText;
	var $matching = $();

	var delay = (function(){
		var timer = 0;
		return function(callback, ms){
			clearTimeout (timer);
		    timer = setTimeout(callback, ms);
		};
	})();

	$(".cd-filter-content input[type='search']").keyup(function(){
	  	// Delay function invoked to make sure user stopped typing
	  	delay(function(){
	    	inputText = $(".cd-filter-content input[type='search']").val().toLowerCase();
	   		// Check to see if input field is empty
	    	if ((inputText.length) > 0) {            
	      		$('.mix').each(function() {
		        	var $this = $(this);
		        
		        	// add item to be filtered out if input text matches items inside the title   
		        	if($this.attr('class').toLowerCase().match(inputText)) {
		          		$matching = $matching.add(this);
		        	} else {
		          		// removes any previously matched item
		          		$matching = $matching.not(this);
		        	}
	      		});
	      		$('.cd-gallery ul').mixItUp('filter', $matching);
	    	} else {
	      		// resets the filter to show all item if input is empty
	      		$('.cd-gallery ul').mixItUp('filter', 'all');
	    	}
	  	}, 200 );
	});
});

/*****************************************************
	MixItUp - Define a single object literal 
	to contain all filter custom functionality
*****************************************************/
var buttonFilter = {
  	// Declare any variables we will need as properties of the object
  	$filters: null,
  	groups: [],
  	outputArray: [],
  	outputString: '',
  
  	// The "init" method will run on document ready and cache any jQuery objects we will need.
  	init: function(){
    	var self = this; // As a best practice, in each method we will asign "this" to the variable "self" so that it remains scope-agnostic. We will use it to refer to the parent "buttonFilter" object so that we can share methods and properties between all parts of the object.
    
    	self.$filters = $('.cd-main-content');
    	self.$container = $('.cd-gallery ul');
    
	    self.$filters.find('.cd-filters').each(function(){
	      	var $this = $(this);
	      
		    self.groups.push({
		        $inputs: $this.find('.filter'),
		        active: '',
		        tracker: false
		    });
	    });
	    
	    self.bindHandlers();
  	},
  
  	// The "bindHandlers" method will listen for whenever a button is clicked. 
  	bindHandlers: function(){
    	var self = this;

    	self.$filters.on('click', 'a', function(e){
	      	self.parseFilters();
    	});
	    self.$filters.on('change', function(){
	      self.parseFilters();           
	    });
  	},
  
  	parseFilters: function(){
	    var self = this;
	 
	    // loop through each filter group and grap the active filter from each one.
	    for(var i = 0, group; group = self.groups[i]; i++){
	    	group.active = [];
	    	group.$inputs.each(function(){
	    		var $this = $(this);
	    		if($this.is('input[type="radio"]') || $this.is('input[type="checkbox"]')) {
	    			if($this.is(':checked') ) {
	    				group.active.push($this.attr('data-filter'));
	    			}
	    		} else if($this.is('select')){
	    			group.active.push($this.val());
	    		} else if( $this.find('.selected').length > 0 ) {
	    			group.active.push($this.attr('data-filter'));
	    		}
	    	});
	    }
	    self.concatenate();
  	},
  
  	concatenate: function(){
    	var self = this;
    
    	self.outputString = ''; // Reset output string
    
	    for(var i = 0, group; group = self.groups[i]; i++){
	      	self.outputString += group.active;
	    }
    
	    // If the output string is empty, show all rather than none:    
	    !self.outputString.length && (self.outputString = 'all'); 
	
    	// Send the output string to MixItUp via the 'filter' method:    
		if(self.$container.mixItUp('isLoaded')){
	    	self.$container.mixItUp('filter', self.outputString);
		}
  	}
};

        
        console.log('draw_items');
        </script>
</body>	
</html>